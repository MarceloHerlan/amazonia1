[{"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Payment\\Payment.js":"1","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\App.js":"2","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Login\\Login.js":"3","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\axios.js":"4","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\index.js":"5","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Checkout\\Checkout.js":"6","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Orders\\Orders.js":"7","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Orders\\Order\\Order.js":"8","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\app\\store.js":"9","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Checkout\\CheckoutProduct\\CheckoutProduct.js":"10","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Header\\Header.js":"11"},{"size":5283,"mtime":1610844591031,"results":"12","hashOfConfig":"13"},{"size":1947,"mtime":1610842117695,"results":"14","hashOfConfig":"15"},{"size":6338,"mtime":1610734426806,"results":"16","hashOfConfig":"13"},{"size":148,"mtime":1610840948669,"results":"17","hashOfConfig":"13"},{"size":644,"mtime":1608561522480,"results":"18","hashOfConfig":"13"},{"size":1318,"mtime":1610735328604,"results":"19","hashOfConfig":"13"},{"size":1143,"mtime":1610849707467,"results":"20","hashOfConfig":"13"},{"size":1280,"mtime":1610848805414,"results":"21","hashOfConfig":"13"},{"size":518,"mtime":1610847696349,"results":"22","hashOfConfig":"13"},{"size":945,"mtime":1610848733742,"results":"23","hashOfConfig":"13"},{"size":2584,"mtime":1610848973324,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"j2dag4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1012rn3",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Payment\\Payment.js",["49"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutProduct from '../Checkout/CheckoutProduct/CheckoutProduct'\r\nimport './Payment.css'\r\nimport {CardElement,useStripe,useElements} from '@stripe/react-stripe-js'\r\nimport CurrencyFormat from 'react-currency-format'\r\nimport axios from '../../axios'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { db } from '../../firebase'\r\n\r\nconst Payment = () => {\r\n    const {basket}=useSelector((state)=>state.basket)\r\n    const {user}=useSelector((state)=>state.user)\r\n    const history=useHistory()\r\n    const dispatch=useDispatch()\r\n   \r\n    const getBasketTotal=(basket)=>(basket?.reduce((amount,item)=>item.price+amount,0))\r\n\r\n    const stripe=useStripe()\r\n    const elements=useElements()\r\n\r\n    const[error,setError]=useState(null)\r\n    const[disabled,setDisabled]=useState(true)\r\n    const[succeded,setSucceded]=useState(false)\r\n    const[processing,setProcessing]=useState(\"\")\r\n    const [clientSecret,setClientSecret]=useState(true)\r\n\r\n    useEffect(()=>{\r\n        const getClientSecret=async()=>{\r\n            const response=await axios({\r\n                method:'post',\r\n                url:`/payments/create?total=${getBasketTotal(basket)*100}`\r\n            })\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n\r\n    },[basket])\r\n\r\n    console.log('the secret is',clientSecret)\r\n\r\n    const handleSubmit= async(e)=>{\r\n        e.preventDefault()\r\n        setProcessing(true)\r\n\r\n        const payload=await stripe.confirmCardPayment(clientSecret,{\r\n            payment_method:{\r\n                card:elements.getElement(CardElement)\r\n            }\r\n        }).then(({paymentIntent})=>{\r\n            db\r\n             .collection('users')\r\n             .doc(user?.uid)\r\n             .collection('orders')\r\n             .doc(paymentIntent.id)\r\n             .set({\r\n                 basket:basket,\r\n                 amount:paymentIntent.amount,\r\n                 created:paymentIntent.created                \r\n             })\r\n\r\n            setSucceded(true)\r\n            setError(false)\r\n            setProcessing(false)\r\n\r\n            dispatch({\r\n                type:'EMPTY_BASKET'\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n    }\r\n\r\n    const handleChange=(event)=>{\r\n        setDisabled(event.empty)\r\n        setError(event.error ? event.error.message:'')\r\n    }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className='payment__container'>\r\n                <div className='payment__section'>\r\n                    <div className='payment__title'>\r\n                        <h3>Delivery Adress</h3>\r\n                    </div>\r\n                    <div className='payment__address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>123 av siempre viva</p>\r\n                        <p>buenos aires</p>\r\n                    </div>\r\n                </div>\r\n                <div className='payment__section'>\r\n                <div className='payment__title'>\r\n                        <h3>Review items and Delivery</h3>\r\n                    </div>\r\n                    <div className='payment__items'>\r\n                        {basket.map(item=>(\r\n                            <CheckoutProduct\r\n                            id={item.id}\r\n                            img={item.img}\r\n                            price={item.price}\r\n                            title={item.title}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className='payment__section'>\r\n                    <div className=\"payment__title\">\r\n                        <h3> Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <CardElement onChange={handleChange} />\r\n                                <div className='payment__priceContainer'>\r\n                                    <CurrencyFormat\r\n                                    renderText={(value)=>(\r\n                                         <h3>Order Total: <strong>{value}</strong></h3>                                        \r\n                                        \r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={'text'}\r\n                                    thousandSeparator={true}\r\n                                    prefix={'$'}\r\n                                    />\r\n                                    <button disabled={processing || disabled || succeded }>\r\n                                    <span>{processing ? <p>Processing</p>: \"Buy now\"}</span>\r\n                                    </button>\r\n\r\n                                    {error && <div>{error}</div>}\r\n                                </div>\r\n                            </form>\r\n                    </div>\r\n                    \r\n                    </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\App.js",["50"],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Login\\Login.js",["51"],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\axios.js",[],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\index.js",[],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Checkout\\Checkout.js",["52"],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Orders\\Orders.js",[],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Orders\\Order\\Order.js",[],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\app\\store.js",["53","54","55"],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Checkout\\CheckoutProduct\\CheckoutProduct.js",["56"],"C:\\Users\\Anna\\Desktop\\react-redux\\Amazonia\\frontend\\src\\components\\Header\\Header.js",["57"],"import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport {auth} from '../../firebase'\r\n\r\n\r\nconst Header = () => {\r\n    const{basket}=useSelector((state)=>state.basket)\r\n    const {user}=useSelector((state)=>state.user)\r\n \r\n   const handleAuthentication= () =>{\r\n       if (user){\r\n        auth.signOut()\r\n       }\r\n   }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <Link to='/'>\r\n            <img className=\"header__logo\" src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"/>\r\n            </Link>\r\n            <div className=\"header__search\">\r\n                <input\r\n                className='header__searchInput'\r\n                type='text'/>\r\n             <SearchIcon className='header__searchIcon' />\r\n            </div>\r\n            <div className='header__nav'>\r\n            <Link to={!user && '/login'}> \r\n                <div onClick={handleAuthentication} className='header__option'>\r\n                    \r\n                    <span className=\"header__optionLineOne\">hello {!user? 'Guest': user.email}</span>\r\n                    <span className=\"header__optionLineTwo\">\r\n                         {user? 'Sign Out' : 'Sign In'}\r\n                    </span>\r\n                </div>\r\n\r\n                </Link>\r\n                <Link to='/orders'>\r\n                <div  className=\"header__option\">\r\n                    <span className=\"header__optionLineOne\">\r\n                        returns\r\n                    </span>\r\n                    <span className=\"header__optionLineTwo\">\r\n                         orders\r\n                    </span>\r\n                </div>\r\n                </Link>\r\n                \r\n                <div className=\"header__option\">\r\n                    <span className=\"header__optionLineOne\">\r\n                        your\r\n                    </span>\r\n                    <span className=\"header__optionLineTwo\">\r\n                         prime\r\n                    </span>\r\n                 \r\n                </div>\r\n                <Link Link to='/checkout'>\r\n                <div className=\"header__optionBasket\">\r\n                    <ShoppingBasketIcon />\r\n                    <span className=\"header__optionLineTwo header__basketCount\">{basket?.length}</span>\r\n                </div>\r\n                </Link>\r\n               \r\n            </div>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Header\r\n",{"ruleId":"58","severity":1,"message":"59","line":47,"column":15,"nodeType":"60","messageId":"61","endLine":47,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":37,"column":5,"nodeType":"64","endLine":37,"endColumn":7,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":37,"column":17,"nodeType":"68","endLine":37,"endColumn":4532},{"ruleId":"66","severity":1,"message":"67","line":15,"column":17,"nodeType":"68","endLine":15,"endColumn":148},{"ruleId":"58","severity":1,"message":"69","line":1,"column":9,"nodeType":"60","messageId":"61","endLine":1,"endColumn":24},{"ruleId":"58","severity":1,"message":"70","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":13},{"ruleId":"58","severity":1,"message":"71","line":13,"column":7,"nodeType":"60","messageId":"61","endLine":13,"endColumn":22},{"ruleId":"66","severity":1,"message":"67","line":19,"column":13,"nodeType":"68","endLine":19,"endColumn":55},{"ruleId":"66","severity":1,"message":"67","line":23,"column":13,"nodeType":"68","endLine":23,"endColumn":100},"no-unused-vars","'payload' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["72"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'applyMiddleware' is defined but never used.","'thunk' is defined but never used.","'composeEnhancer' is assigned a value but never used.",{"desc":"73","fix":"74"},"Update the dependencies array to be: [dispatch]",{"range":"75","text":"76"},[1190,1192],"[dispatch]"]